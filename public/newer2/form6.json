{
    "display": "form",
    "routerPath": {
        "networkId": "632a8171e80f7a14edc376f4",
        "siteId": "632a8264e80f7a8475c377f1"
    },
    "components": [
        {
            "label": "Settings Container",
            "tableView": false,
            "key": "settings",
            "type": "settingsContainer",
            "input": true,
            "lazyLoad": false,
            "components": [
                {
                    "label": "Tabs",
                    "components": [
                        {
                            "label": "Product Information",
                            "key": "productInformation",
                            "components": [
                                {
                                    "label": "Columns",
                                    "columns": [
                                        {
                                            "components": [
                                                {
                                                    "label": "Product Input",
                                                    "optionsLabelPosition": "right",
                                                    "inline": false,
                                                    "tableView": false,
                                                    "values": [
                                                        {
                                                            "label": "Free Text",
                                                            "value": "freeText",
                                                            "shortcut": ""
                                                        },
                                                        {
                                                            "label": "Product Database",
                                                            "value": "productDatabase",
                                                            "shortcut": ""
                                                        }
                                                    ],
                                                    "key": "productInput",
                                                    "type": "radio",
                                                    "input": true,
                                                    "defaultValue": "freeText"
                                                },
                                                {
                                                    "label": "Select Product Database",
                                                    "widget": "choicesjs",
                                                    "tableView": true,
                                                    "key": "selectProductDatabase",
                                                    "type": "select",
                                                    "input": true,
                                                    "searchDebounce": 0.3
                                                }
                                            ],
                                            "width": 6,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "size": "md",
                                            "currentWidth": 6
                                        },
                                        {
                                            "components": [
                                                {
                                                    "label": "Product Options",
                                                    "optionsLabelPosition": "right",
                                                    "tableView": false,
                                                    "values": [
                                                        {
                                                            "label": "Assign Unique ID",
                                                            "value": "assignUniqueId",
                                                            "shortcut": ""
                                                        }
                                                    ],
                                                    "key": "productOptions",
                                                    "type": "selectboxes",
                                                    "input": true,
                                                    "inputType": "checkbox"
                                                }
                                            ],
                                            "width": 6,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "size": "md",
                                            "currentWidth": 6
                                        }
                                    ],
                                    "key": "columns5",
                                    "type": "columns",
                                    "input": false,
                                    "tableView": false,
                                    "lazyLoad": false
                                }
                            ]
                        },
                        {
                            "label": "Cook Steps",
                            "key": "tab1",
                            "components": [
                                {
                                    "label": "Enable",
                                    "tableView": false,
                                    "defaultValue": false,
                                    "key": "cookEnable",
                                    "type": "checkbox",
                                    "input": true
                                },
                                {
                                    "label": "Columns",
                                    "columns": [
                                        {
                                            "components": [
                                                {
                                                    "title": "Cook Methods",
                                                    "collapsible": false,
                                                    "key": "cookMethods",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Enable",
                                                            "tableView": false,
                                                            "key": "enable3",
                                                            "type": "checkbox",
                                                            "input": true,
                                                            "defaultValue": false
                                                        },
                                                        {
                                                            "label": "Cook Methods",
                                                            "editor": "ace",
                                                            "autoExpand": false,
                                                            "tableView": true,
                                                            "key": "cookMethods1",
                                                            "type": "textarea",
                                                            "input": true,
                                                            "truncateMultipleSpaces": false
                                                        },
                                                        {
                                                            "label": "cookMethods1Array",
                                                            "calculateValue": "value = data.settings.cookMethods1.trim().split('\\n')",
                                                            "key": "cookMethods1Array",
                                                            "type": "hidden",
                                                            "input": true,
                                                            "tableView": false
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                }
                                            ],
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "size": "md",
                                            "currentWidth": 3
                                        },
                                        {
                                            "components": [
                                                {
                                                    "title": "Full Cook",
                                                    "collapsible": false,
                                                    "key": "fullCook",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Enable",
                                                            "tableView": false,
                                                            "key": "enable",
                                                            "type": "checkbox",
                                                            "input": true,
                                                            "defaultValue": false
                                                        },
                                                        {
                                                            "label": "Critical Limit",
                                                            "mask": false,
                                                            "tableView": false,
                                                            "delimiter": false,
                                                            "requireDecimal": false,
                                                            "inputFormat": "plain",
                                                            "truncateMultipleSpaces": false,
                                                            "key": "criticalLimit",
                                                            "type": "number",
                                                            "input": true
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                },
                                                {
                                                    "title": "6D Process (Listeria)",
                                                    "collapsible": false,
                                                    "key": "fullCook3",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Enable",
                                                            "tableView": false,
                                                            "key": "enable6",
                                                            "type": "checkbox",
                                                            "input": true,
                                                            "defaultValue": false
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                }
                                            ],
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "size": "md",
                                            "currentWidth": 3
                                        },
                                        {
                                            "components": [
                                                {
                                                    "title": "Seal | Sear | Partial Cook",
                                                    "collapsible": false,
                                                    "key": "fullCook1",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Enable",
                                                            "tableView": false,
                                                            "key": "enable1",
                                                            "type": "checkbox",
                                                            "input": true,
                                                            "defaultValue": false
                                                        },
                                                        {
                                                            "label": "Critical Limit",
                                                            "mask": false,
                                                            "tableView": false,
                                                            "delimiter": false,
                                                            "requireDecimal": false,
                                                            "inputFormat": "plain",
                                                            "truncateMultipleSpaces": false,
                                                            "key": "criticalLimit1",
                                                            "type": "number",
                                                            "input": true
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                },
                                                {
                                                    "title": "6D Process (Clostridium)",
                                                    "collapsible": false,
                                                    "key": "fullCook4",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Enable",
                                                            "tableView": false,
                                                            "key": "enable7",
                                                            "type": "checkbox",
                                                            "input": true,
                                                            "defaultValue": false
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                }
                                            ],
                                            "size": "md",
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "currentWidth": 3
                                        },
                                        {
                                            "components": [
                                                {
                                                    "title": "Sous Vide",
                                                    "collapsible": false,
                                                    "key": "fullCook2",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Enable",
                                                            "tableView": false,
                                                            "key": "enable2",
                                                            "type": "checkbox",
                                                            "input": true,
                                                            "defaultValue": false
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                },
                                                {
                                                    "title": "Corrective Actions",
                                                    "collapsible": false,
                                                    "key": "correctiveActions3",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Corrective Actions",
                                                            "editor": "ace",
                                                            "tableView": true,
                                                            "key": "correctiveActions4",
                                                            "type": "textarea",
                                                            "input": true,
                                                            "truncateMultipleSpaces": false
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                }
                                            ],
                                            "size": "md",
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "currentWidth": 3
                                        }
                                    ],
                                    "key": "columns4",
                                    "type": "columns",
                                    "input": false,
                                    "tableView": false,
                                    "lazyLoad": false
                                }
                            ]
                        },
                        {
                            "label": "Chill Steps",
                            "key": "chillSteps",
                            "components": [
                                {
                                    "label": "Enable",
                                    "tableView": false,
                                    "defaultValue": false,
                                    "key": "chillEnable",
                                    "type": "checkbox",
                                    "input": true
                                },
                                {
                                    "label": "Columns",
                                    "columns": [
                                        {
                                            "components": [
                                                {
                                                    "title": "Chill Methods",
                                                    "collapsible": false,
                                                    "key": "chillMethods",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Enable",
                                                            "tableView": false,
                                                            "defaultValue": false,
                                                            "key": "enable4",
                                                            "type": "checkbox",
                                                            "input": true
                                                        },
                                                        {
                                                            "label": "Chill Methods",
                                                            "editor": "ace",
                                                            "autoExpand": false,
                                                            "tableView": true,
                                                            "key": "chillMethods1",
                                                            "type": "textarea",
                                                            "input": true,
                                                            "truncateMultipleSpaces": false
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                },
                                                {
                                                    "label": "chillMethods1Array",
                                                    "calculateValue": "value = data.settings.chillMethods1.trim().split('\\n')",
                                                    "key": "chillMethods1Array",
                                                    "type": "hidden",
                                                    "input": true,
                                                    "tableView": false
                                                }
                                            ],
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "size": "md",
                                            "currentWidth": 3
                                        },
                                        {
                                            "components": [
                                                {
                                                    "collapsible": false,
                                                    "key": "panel",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Chill Steps",
                                                            "optionsLabelPosition": "right",
                                                            "inline": false,
                                                            "tableView": false,
                                                            "values": [
                                                                {
                                                                    "label": "One Phase Chill",
                                                                    "value": "onePhaseChill",
                                                                    "shortcut": ""
                                                                },
                                                                {
                                                                    "label": "Two Phase Chill",
                                                                    "value": "twoPhaseChill",
                                                                    "shortcut": ""
                                                                }
                                                            ],
                                                            "key": "chillSteps1",
                                                            "type": "radio",
                                                            "input": true
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                }
                                            ],
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "size": "md",
                                            "currentWidth": 3
                                        },
                                        {
                                            "components": [
                                                {
                                                    "title": "Phase 1 Chill",
                                                    "collapsible": false,
                                                    "key": "phase1Chill",
                                                    "customConditional": "show = data.settings.chillSteps1 === 'onePhaseChill' || data.settings.chillSteps1 === 'twoPhaseChill'",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Starting Temperature",
                                                            "prefix": "≤",
                                                            "mask": false,
                                                            "tableView": false,
                                                            "delimiter": false,
                                                            "requireDecimal": false,
                                                            "inputFormat": "plain",
                                                            "truncateMultipleSpaces": false,
                                                            "key": "upperLimit",
                                                            "type": "number",
                                                            "input": true
                                                        },
                                                        {
                                                            "label": "Finishing Temperature ",
                                                            "mask": false,
                                                            "tableView": false,
                                                            "delimiter": false,
                                                            "requireDecimal": false,
                                                            "inputFormat": "plain",
                                                            "truncateMultipleSpaces": false,
                                                            "key": "finishTemperature",
                                                            "type": "number",
                                                            "input": true
                                                        },
                                                        {
                                                            "label": "Time Permitted",
                                                            "mask": false,
                                                            "tableView": false,
                                                            "delimiter": false,
                                                            "requireDecimal": false,
                                                            "inputFormat": "plain",
                                                            "truncateMultipleSpaces": false,
                                                            "key": "timePermitted",
                                                            "type": "number",
                                                            "input": true
                                                        },
                                                        {
                                                            "label": "Corrective Actions",
                                                            "editor": "ace",
                                                            "tableView": true,
                                                            "key": "correctiveActions",
                                                            "type": "textarea",
                                                            "input": true,
                                                            "truncateMultipleSpaces": false
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                }
                                            ],
                                            "size": "md",
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "currentWidth": 3
                                        },
                                        {
                                            "components": [
                                                {
                                                    "title": "Phase 2 Chill",
                                                    "collapsible": false,
                                                    "key": "phase1Chill1",
                                                    "customConditional": "show = data.settings.chillSteps1 === 'twoPhaseChill'",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Starting Temperature",
                                                            "mask": false,
                                                            "tableView": false,
                                                            "delimiter": false,
                                                            "requireDecimal": false,
                                                            "inputFormat": "plain",
                                                            "truncateMultipleSpaces": false,
                                                            "key": "upperLimit1",
                                                            "type": "number",
                                                            "input": true
                                                        },
                                                        {
                                                            "label": "Finishing Temperature ",
                                                            "mask": false,
                                                            "tableView": false,
                                                            "delimiter": false,
                                                            "requireDecimal": false,
                                                            "inputFormat": "plain",
                                                            "truncateMultipleSpaces": false,
                                                            "key": "finishTemperature1",
                                                            "type": "number",
                                                            "input": true
                                                        },
                                                        {
                                                            "label": "Time Permitted",
                                                            "mask": false,
                                                            "tableView": false,
                                                            "delimiter": false,
                                                            "requireDecimal": false,
                                                            "inputFormat": "plain",
                                                            "truncateMultipleSpaces": false,
                                                            "key": "timePermitted1",
                                                            "type": "number",
                                                            "input": true
                                                        },
                                                        {
                                                            "label": "Corrective Actions",
                                                            "editor": "ace",
                                                            "tableView": true,
                                                            "key": "correctiveActions1",
                                                            "type": "textarea",
                                                            "input": true,
                                                            "truncateMultipleSpaces": false
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                }
                                            ],
                                            "size": "md",
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "currentWidth": 3
                                        }
                                    ],
                                    "key": "columns1",
                                    "type": "columns",
                                    "input": false,
                                    "tableView": false,
                                    "lazyLoad": false
                                }
                            ]
                        },
                        {
                            "label": "Re-therm Steps",
                            "key": "reThermSteps",
                            "components": [
                                {
                                    "label": "Enable",
                                    "tableView": false,
                                    "key": "reThermEnable",
                                    "type": "checkbox",
                                    "input": true,
                                    "defaultValue": false
                                },
                                {
                                    "label": "Columns",
                                    "columns": [
                                        {
                                            "components": [
                                                {
                                                    "title": "Re-therm Methods",
                                                    "collapsible": false,
                                                    "key": "reThermMethods",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Enable",
                                                            "tableView": false,
                                                            "key": "enable5",
                                                            "type": "checkbox",
                                                            "input": true,
                                                            "defaultValue": false
                                                        },
                                                        {
                                                            "label": "Re-therm Methods",
                                                            "editor": "ace",
                                                            "tableView": true,
                                                            "key": "reThermMethods1",
                                                            "type": "textarea",
                                                            "input": true,
                                                            "truncateMultipleSpaces": false
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                },
                                                {
                                                    "label": "reThermMethods1Array",
                                                    "calculateValue": "value = data.settings.reThermMethods1.trim().split('\\n')",
                                                    "key": "reThermMethods1Array",
                                                    "type": "hidden",
                                                    "input": true,
                                                    "tableView": false
                                                }
                                            ],
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "size": "md",
                                            "currentWidth": 3
                                        },
                                        {
                                            "components": [
                                                {
                                                    "title": "Temperature",
                                                    "collapsible": false,
                                                    "key": "temperature",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Critical Limit",
                                                            "mask": false,
                                                            "tableView": false,
                                                            "delimiter": false,
                                                            "requireDecimal": false,
                                                            "inputFormat": "plain",
                                                            "truncateMultipleSpaces": false,
                                                            "key": "criticalLimit2",
                                                            "type": "number",
                                                            "input": true
                                                        },
                                                        {
                                                            "label": "Corrective Actions",
                                                            "editor": "ace",
                                                            "tableView": true,
                                                            "key": "correctiveActions2",
                                                            "type": "textarea",
                                                            "input": true,
                                                            "truncateMultipleSpaces": false
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                }
                                            ],
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "size": "md",
                                            "currentWidth": 3
                                        },
                                        {
                                            "components": [],
                                            "size": "md",
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "currentWidth": 3
                                        },
                                        {
                                            "components": [],
                                            "size": "md",
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "currentWidth": 3
                                        }
                                    ],
                                    "key": "columns6",
                                    "type": "columns",
                                    "input": false,
                                    "tableView": false,
                                    "lazyLoad": false
                                }
                            ]
                        },
                        {
                            "label": "Service Steps",
                            "key": "serviceSteps",
                            "components": [
                                {
                                    "label": "Enable",
                                    "tableView": false,
                                    "key": "serviceEnable",
                                    "type": "checkbox",
                                    "input": true,
                                    "defaultValue": false
                                },
                                {
                                    "label": "Columns",
                                    "columns": [
                                        {
                                            "components": [
                                                {
                                                    "title": "Service Methods",
                                                    "collapsible": false,
                                                    "key": "serviceMethods",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Enable",
                                                            "tableView": false,
                                                            "defaultValue": false,
                                                            "key": "enable52",
                                                            "type": "checkbox",
                                                            "input": true
                                                        },
                                                        {
                                                            "label": "Service Methods",
                                                            "editor": "ace",
                                                            "autoExpand": false,
                                                            "tableView": true,
                                                            "key": "reThermMethods2",
                                                            "type": "textarea",
                                                            "input": true,
                                                            "truncateMultipleSpaces": false
                                                        },
                                                        {
                                                            "label": "reThermMethods2Array",
                                                            "calculateValue": "value = data.settings.reThermMethods2.trim().split('\\n')",
                                                            "key": "reThermMethods2Array",
                                                            "type": "hidden",
                                                            "input": true,
                                                            "tableView": false
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                }
                                            ],
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "size": "md",
                                            "currentWidth": 3
                                        },
                                        {
                                            "components": [
                                                {
                                                    "title": "Temperature",
                                                    "collapsible": false,
                                                    "key": "temperature2",
                                                    "type": "panel",
                                                    "label": "Panel",
                                                    "input": false,
                                                    "tableView": false,
                                                    "components": [
                                                        {
                                                            "label": "Critical Limit",
                                                            "mask": false,
                                                            "tableView": false,
                                                            "delimiter": false,
                                                            "requireDecimal": false,
                                                            "inputFormat": "plain",
                                                            "truncateMultipleSpaces": false,
                                                            "key": "criticalLimit2113",
                                                            "type": "number",
                                                            "input": true
                                                        },
                                                        {
                                                            "label": "Corrective Actions",
                                                            "editor": "ace",
                                                            "autoExpand": false,
                                                            "tableView": true,
                                                            "key": "correctiveActions23",
                                                            "type": "textarea",
                                                            "input": true,
                                                            "truncateMultipleSpaces": false
                                                        }
                                                    ],
                                                    "lazyLoad": false
                                                }
                                            ],
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "size": "md",
                                            "currentWidth": 3
                                        },
                                        {
                                            "components": [],
                                            "size": "md",
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "currentWidth": 3
                                        },
                                        {
                                            "components": [],
                                            "size": "md",
                                            "width": 3,
                                            "offset": 0,
                                            "push": 0,
                                            "pull": 0,
                                            "currentWidth": 3
                                        }
                                    ],
                                    "key": "columns64",
                                    "type": "columns",
                                    "input": false,
                                    "tableView": false,
                                    "lazyLoad": false
                                }
                            ]
                        }
                    ],
                    "verticalLayout": true,
                    "key": "tabs",
                    "type": "tabs",
                    "input": false,
                    "tableView": false,
                    "lazyLoad": false
                }
            ]
        },
        {
            "title": "Process Information",
            "collapsible": true,
            "key": "productInformation1",
            "type": "panel",
            "label": "Panel",
            "collapsed": true,
            "input": false,
            "tableView": false,
            "components": [
                {
                    "label": "Columns",
                    "columns": [
                        {
                            "components": [
                                {
                                    "label": "n3",
                                    "key": "n3",
                                    "type": "well",
                                    "input": false,
                                    "tableView": false,
                                    "components": [
                                        {
                                            "label": "Product",
                                            "tableView": true,
                                            "key": "product",
                                            "customConditional": "show = data.settings.productInput === 'freeText'",
                                            "type": "textfield",
                                            "input": true,
                                            "truncateMultipleSpaces": false
                                        },
                                        {
                                            "label": "Select Product",
                                            "widget": "choicesjs",
                                            "tableView": true,
                                            "key": "selectProduct",
                                            "customConditional": "show = data.settings.productInput === 'productDatabase'",
                                            "type": "select",
                                            "input": true,
                                            "searchDebounce": 0.3
                                        },
                                        {
                                            "label": "Assigned ID",
                                            "disabled": true,
                                            "tableView": true,
                                            "key": "assignedId",
                                            "customConditional": "show = data.settings.productOptions.assignUniqueId",
                                            "type": "textfield",
                                            "input": true,
                                            "truncateMultipleSpaces": false
                                        },
                                        {
                                            "label": "Process Steps",
                                            "optionsLabelPosition": "right",
                                            "tableView": false,
                                            "values": [
                                                {
                                                    "label": "Cook",
                                                    "value": "cook",
                                                    "shortcut": ""
                                                },
                                                {
                                                    "label": "Chill",
                                                    "value": "chill",
                                                    "shortcut": ""
                                                },
                                                {
                                                    "label": "Re-therm",
                                                    "value": "reTherm",
                                                    "shortcut": ""
                                                },
                                                {
                                                    "label": "Service",
                                                    "value": "service",
                                                    "shortcut": ""
                                                }
                                            ],
                                            "key": "processSteps",
                                            "logic": [
                                                {
                                                    "name": "get data source",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = true"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get data source",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "const steps = [\n  {\n    label: 'Cook',\n    value: data.settings.cookEnable\n  },\n  {\n    label: 'Chill',\n    value: data.settings.chillEnable  \n  },\n  {\n    label: 'Re-therm',\n    value: data.settings.reThermEnable,\n  },\n  {\n    label: 'Service',\n    value: data.settings.serviceEnable\n  }\n]\n\nlet values = steps.map(item => {\n  if(item.value) {\n   return {\n     label: item.label,\n     value: item.label\n   } \n  } else {\n    return false\n  }\n})\n\nvalues = values.filter(value => value !== false)\nschema = { values, hidden: values.length === 0 }"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "selectboxes",
                                            "input": true,
                                            "inputType": "checkbox"
                                        }
                                    ],
                                    "lazyLoad": false
                                }
                            ],
                            "width": 3,
                            "offset": 0,
                            "push": 0,
                            "pull": 0,
                            "size": "md",
                            "currentWidth": 3
                        },
                        {
                            "components": [
                                {
                                    "label": "Cook",
                                    "key": "cookwell",
                                    "customConditional": "show = data.processSteps.Cook ",
                                    "type": "well",
                                    "input": false,
                                    "tableView": false,
                                    "components": [
                                        {
                                            "label": "Cook Type",
                                            "optionsLabelPosition": "right",
                                            "inline": false,
                                            "tableView": false,
                                            "perMode": "def",
                                            "values": [
                                                {
                                                    "label": "Full Cook",
                                                    "value": "fullCook",
                                                    "shortcut": ""
                                                },
                                                {
                                                    "label": "Seal | Sear | Partial Cook",
                                                    "value": "sealSearPartialCook",
                                                    "shortcut": ""
                                                },
                                                {
                                                    "label": "Sous Vide",
                                                    "value": "sousVide",
                                                    "shortcut": ""
                                                },
                                                {
                                                    "label": "6D Process (Listeria)",
                                                    "value": "6DProcessListeria",
                                                    "shortcut": ""
                                                },
                                                {
                                                    "label": "6D Process (Clostridium)",
                                                    "value": "6DProcessClostridium",
                                                    "shortcut": ""
                                                }
                                            ],
                                            "clearOnHide": false,
                                            "key": "cook",
                                            "logic": [
                                                {
                                                    "name": "get data source",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = true"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get data source",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "const types = [\n  {\n    label: 'Full Cook',\n    value: data.settings.enable\n  },\n  {\n    label: 'Seal | Sear | Partial Cook',\n    value: data.settings.enable1\n  },\n  {\n    label: 'Sous Vide',\n    value: data.settings.enable2\n  },\n  {\n    label: '6D Process (Listeria)',\n    value: data.settings.enable6\n  },\n  {\n    label: '6D Process (Clostridium)',\n    value: data.settings.enable7\n  }\n]\n\nlet values = types.map(item => {\n  if(item.value) {\n    return {\n      label: item.label,\n      value: item.label\n    }\n  } else {\n    return false\n  }\n})\n\nvalues = values.filter(value => value !== false)\nschema = { values, hidden: values.length === 0}"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "radio",
                                            "input": true
                                        },
                                        {
                                            "label": "SV",
                                            "key": "sv",
                                            "conditional": {
                                                "show": true,
                                                "when": "cook",
                                                "eq": "sousVide"
                                            },
                                            "customConditional": "show = data.cook === 'Sous Vide'",
                                            "type": "well",
                                            "input": false,
                                            "tableView": false,
                                            "components": [
                                                {
                                                    "html": "<p><strong>Sous Vide Parameters</strong></p>",
                                                    "label": "Content",
                                                    "refreshOnChange": false,
                                                    "key": "content7",
                                                    "type": "content",
                                                    "input": false,
                                                    "tableView": false
                                                },
                                                {
                                                    "label": "Product Category",
                                                    "optionsLabelPosition": "right",
                                                    "inline": false,
                                                    "tableView": false,
                                                    "values": [
                                                        {
                                                            "label": "Category 1",
                                                            "value": "category1",
                                                            "shortcut": ""
                                                        },
                                                        {
                                                            "label": "Category 2",
                                                            "value": "category2",
                                                            "shortcut": ""
                                                        }
                                                    ],
                                                    "key": "productCategory",
                                                    "type": "radio",
                                                    "input": true
                                                },
                                                {
                                                    "label": "Product Thickness (cm)",
                                                    "widget": "choicesjs",
                                                    "tableView": true,
                                                    "data": {
                                                        "values": [
                                                            {
                                                                "label": ".5",
                                                                "value": "5"
                                                            },
                                                            {
                                                                "label": "1",
                                                                "value": "19"
                                                            },
                                                            {
                                                                "label": "2",
                                                                "value": "50"
                                                            },
                                                            {
                                                                "label": "3",
                                                                "value": "90"
                                                            },
                                                            {
                                                                "label": "4",
                                                                "value": "150"
                                                            },
                                                            {
                                                                "label": "5",
                                                                "value": "210"
                                                            },
                                                            {
                                                                "label": "6",
                                                                "value": "285"
                                                            }
                                                        ]
                                                    },
                                                    "key": "productThickness",
                                                    "customConditional": "show = data.productCategory === 'category1'",
                                                    "type": "select",
                                                    "input": true,
                                                    "searchDebounce": 0.3
                                                },
                                                {
                                                    "label": "Cook Temperature",
                                                    "widget": "choicesjs",
                                                    "tableView": true,
                                                    "data": {
                                                        "values": [
                                                            {
                                                                "label": "55",
                                                                "value": "55"
                                                            },
                                                            {
                                                                "label": "56",
                                                                "value": "56"
                                                            },
                                                            {
                                                                "label": "57",
                                                                "value": "57"
                                                            },
                                                            {
                                                                "label": "58",
                                                                "value": "58"
                                                            },
                                                            {
                                                                "label": "59",
                                                                "value": "59"
                                                            },
                                                            {
                                                                "label": "60",
                                                                "value": "60"
                                                            },
                                                            {
                                                                "label": "61",
                                                                "value": "61"
                                                            },
                                                            {
                                                                "label": "62",
                                                                "value": "62"
                                                            },
                                                            {
                                                                "label": "63",
                                                                "value": "63"
                                                            },
                                                            {
                                                                "label": "64",
                                                                "value": "64"
                                                            },
                                                            {
                                                                "label": "65",
                                                                "value": "65"
                                                            },
                                                            {
                                                                "label": "66",
                                                                "value": "66"
                                                            },
                                                            {
                                                                "label": "67",
                                                                "value": "67"
                                                            },
                                                            {
                                                                "label": "68",
                                                                "value": "68"
                                                            },
                                                            {
                                                                "label": "69",
                                                                "value": "69"
                                                            },
                                                            {
                                                                "label": "70",
                                                                "value": "70"
                                                            },
                                                            {
                                                                "label": "71",
                                                                "value": "71"
                                                            },
                                                            {
                                                                "label": "72",
                                                                "value": "72"
                                                            },
                                                            {
                                                                "label": "73",
                                                                "value": "73"
                                                            },
                                                            {
                                                                "label": "74",
                                                                "value": "74"
                                                            },
                                                            {
                                                                "label": "75",
                                                                "value": "75"
                                                            }
                                                        ]
                                                    },
                                                    "key": "cookTemperature",
                                                    "logic": [
                                                        {
                                                            "name": "control",
                                                            "trigger": {
                                                                "type": "javascript",
                                                                "javascript": "result = data.productCategory === 'category1' && data.productThickness"
                                                            },
                                                            "actions": [
                                                                {
                                                                    "name": "control value",
                                                                    "type": "value",
                                                                    "value": "const opts = [\n  {\n    label: 55,\n    value: 200\n  },\n  {\n    label: 56,\n    value: 147\n  },\n  {\n    label: 57,\n    value: 109\n  },\n  {\n    label: 58,\n    value: 80\n  },\n  {\n    label: 59,\n    value: 59\n  },\n  {\n    label: 60,\n    value: 44\n  },\n  {\n    label: 61,\n    value: 32\n  },\n  {\n    label: 62,\n    value: 24\n  },\n  {\n    label: 63,\n    value: 18\n  },\n  {\n    label: 64,\n    value: 13\n  },\n  {\n    label: 65,\n    value: 10\n  },\n  {\n    label: 66,\n    value: 7\n  },\n  {\n    label: 67,\n    value: 5\n  },\n  {\n    label: 68,\n    value: 4\n  },\n  {\n    label: 69,\n    value: 3\n  },\n  {\n    label: 70,\n    value: 2\n  },\n  {\n    label: 71,\n    value: 1.5\n  },\n  {\n    label: 72,\n    value: 1.083\n  },\n  {\n    label: 73,\n    value: .8\n  },\n  {\n    label: 74,\n    value: .6\n  },\n  {\n    label: 75,\n    value: .433\n  }\n]\n\nconst opt = opts.find(opt => opt.label === Number(value))\n\nif (opt.value + data.productThickness > 360) {\n  value = ''\n}"
                                                                },
                                                                {
                                                                    "name": "control data source",
                                                                    "type": "mergeComponentSchema",
                                                                    "schemaDefinition": "const opts = [\n  {\n    label: 55,\n    value: 200\n  },\n  {\n    label: 56,\n    value: 147\n  },\n  {\n    label: 57,\n    value: 109\n  },\n  {\n    label: 58,\n    value: 80\n  },\n  {\n    label: 59,\n    value: 59\n  },\n  {\n    label: 60,\n    value: 44\n  },\n  {\n    label: 61,\n    value: 32\n  },\n  {\n    label: 62,\n    value: 24\n  },\n  {\n    label: 63,\n    value: 18\n  },\n  {\n    label: 64,\n    value: 13\n  },\n  {\n    label: 65,\n    value: 10\n  },\n  {\n    label: 66,\n    value: 7\n  },\n  {\n    label: 67,\n    value: 5\n  },\n  {\n    label: 68,\n    value: 4\n  },\n  {\n    label: 69,\n    value: 3\n  },\n  {\n    label: 70,\n    value: 2\n  },\n  {\n    label: 71,\n    value: 1.5\n  },\n  {\n    label: 72,\n    value: 1.083\n  },\n  {\n    label: 73,\n    value: .8\n  },\n  {\n    label: 74,\n    value: .6\n  },\n  {\n    label: 75,\n    value: .433\n  }\n]\n\nif(data.productCategory === 'category1' && typeof data.productThickness === 'number') {\n  const filteredOpts = opts.filter(opt => opt.value + data.productThickness <= 360)\n  schema = { data: { values: filteredOpts.map(opt => ({ label: opt.label, value: opt.label})) } }\n}"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "type": "select",
                                                    "input": true,
                                                    "searchDebounce": 0.3
                                                },
                                                {
                                                    "label": "cookTemperatureTime",
                                                    "calculateValue": "const opts = [\n  {\n    label: 55,\n    value: 200\n  },\n  {\n    label: 56,\n    value: 147\n  },\n  {\n    label: 57,\n    value: 109\n  },\n  {\n    label: 58,\n    value: 80\n  },\n  {\n    label: 59,\n    value: 59\n  },\n  {\n    label: 60,\n    value: 44\n  },\n  {\n    label: 61,\n    value: 32\n  },\n  {\n    label: 62,\n    value: 24\n  },\n  {\n    label: 63,\n    value: 18\n  },\n  {\n    label: 64,\n    value: 13\n  },\n  {\n    label: 65,\n    value: 10\n  },\n  {\n    label: 66,\n    value: 7\n  },\n  {\n    label: 67,\n    value: 5\n  },\n  {\n    label: 68,\n    value: 4\n  },\n  {\n    label: 69,\n    value: 3\n  },\n  {\n    label: 70,\n    value: 2\n  },\n  {\n    label: 71,\n    value: 1.5\n  },\n  {\n    label: 72,\n    value: 1.083\n  },\n  {\n    label: 73,\n    value: .8\n  },\n  {\n    label: 74,\n    value: .6\n  },\n  {\n    label: 75,\n    value: .433\n  }\n]\n\nconsole.log(opts.find(opt => opt.label === Number(data.cookTemperature)).value)\nvalue = opts.find(opt => opt.label === Number(data.cookTemperature)).value",
                                                    "key": "cookTemperatureTime",
                                                    "type": "hidden",
                                                    "input": true,
                                                    "tableView": false
                                                },
                                                {
                                                    "label": "Time Required (mins)",
                                                    "disabled": true,
                                                    "tableView": true,
                                                    "calculateValue": "let minutes = 0\n\nif(data.productCategory === 'category1') {\n  minutes = (data.productThickness || 0) + (data.cookTemperatureTime || 0)\n} else if(data.productCategory === 'category2') {\n  minutes = data.cookTemperatureTime\n}\n\nvalue = minutes",
                                                    "key": "timeRequired",
                                                    "type": "textfield",
                                                    "input": true,
                                                    "truncateMultipleSpaces": false
                                                }
                                            ],
                                            "lazyLoad": false
                                        },
                                        {
                                            "label": "List",
                                            "key": "list",
                                            "conditional": {
                                                "show": true,
                                                "when": "cook",
                                                "eq": "6DProcessListeria"
                                            },
                                            "customConditional": "show = data.cook === '6D Process (Listeria)'",
                                            "type": "well",
                                            "input": false,
                                            "tableView": false,
                                            "components": [
                                                {
                                                    "html": "<p><strong>6D Process (Listeria)</strong></p>",
                                                    "label": "Content",
                                                    "refreshOnChange": false,
                                                    "key": "content8",
                                                    "type": "content",
                                                    "input": false,
                                                    "tableView": false
                                                },
                                                {
                                                    "label": "Internal Product Temperature",
                                                    "widget": "choicesjs",
                                                    "tableView": true,
                                                    "data": {
                                                        "values": [
                                                            {
                                                                "label": "63",
                                                                "value": "63"
                                                            },
                                                            {
                                                                "label": "64",
                                                                "value": "64"
                                                            },
                                                            {
                                                                "label": "65",
                                                                "value": "65"
                                                            },
                                                            {
                                                                "label": "66",
                                                                "value": "66"
                                                            },
                                                            {
                                                                "label": "67",
                                                                "value": "67"
                                                            },
                                                            {
                                                                "label": "68",
                                                                "value": "68"
                                                            },
                                                            {
                                                                "label": "69",
                                                                "value": "69"
                                                            },
                                                            {
                                                                "label": "70",
                                                                "value": "70"
                                                            },
                                                            {
                                                                "label": "71",
                                                                "value": "71"
                                                            },
                                                            {
                                                                "label": "72",
                                                                "value": "72"
                                                            },
                                                            {
                                                                "label": "73",
                                                                "value": "73"
                                                            },
                                                            {
                                                                "label": "74",
                                                                "value": "74"
                                                            },
                                                            {
                                                                "label": "75",
                                                                "value": "75"
                                                            },
                                                            {
                                                                "label": "76",
                                                                "value": "76"
                                                            },
                                                            {
                                                                "label": "77",
                                                                "value": "77"
                                                            },
                                                            {
                                                                "label": "78",
                                                                "value": "78"
                                                            },
                                                            {
                                                                "label": "79",
                                                                "value": "79"
                                                            },
                                                            {
                                                                "label": "80",
                                                                "value": "80"
                                                            },
                                                            {
                                                                "label": "81",
                                                                "value": "81"
                                                            },
                                                            {
                                                                "label": "82",
                                                                "value": "82"
                                                            },
                                                            {
                                                                "label": "83",
                                                                "value": "83"
                                                            },
                                                            {
                                                                "label": "84",
                                                                "value": "84"
                                                            },
                                                            {
                                                                "label": "85",
                                                                "value": "85"
                                                            }
                                                        ]
                                                    },
                                                    "key": "internalProductTemperature",
                                                    "type": "select",
                                                    "input": true,
                                                    "searchDebounce": 0.3
                                                },
                                                {
                                                    "label": "internalProductTemperatureTime",
                                                    "calculateValue": "const opts = [\n  { label: 63, value: 17 },\n  { label: 64, value: 12.7 },\n  { label: 65, value: 9.3 },\n  { label: 66, value: 6.8 },\n  { label: 67, value: 5 },\n  { label: 68, value: 3.7 },\n  { label: 69, value: 2.7 },\n  { label: 70, value: 2 },\n  { label: 71, value: 1.5 },\n  { label: 72, value: 1 },\n  { label: 73, value: 0.8 },\n  { label: 74, value: 0.6 },\n  { label: 75, value: 0.4 },\n  { label: 76, value: 0.3 },\n  { label: 77, value: 0.2 },\n  { label: 78, value: 0.2 },\n  { label: 79, value: 0.1 },\n  { label: 80, value: 0.09 },\n  { label: 81, value: 0.07 },\n  { label: 82, value: 0.05 },\n  { label: 83, value: 0.03 },\n  { label: 84, value: 0.03 },\n  { label: 85, value: 0.02 },\n]\n\nconst opt = opts.find(opt => opt.label === Number(data.internalProductTemperature))\nvalue = opt.value ? opt.value : ''",
                                                    "key": "internalProductTemperatureTime",
                                                    "type": "hidden",
                                                    "input": true,
                                                    "tableView": false
                                                },
                                                {
                                                    "label": "Cook Time for 6D Process (mins)",
                                                    "disabled": true,
                                                    "tableView": true,
                                                    "calculateValue": "value = data.internalProductTemperatureTime",
                                                    "key": "cookTimeFor6DProcess",
                                                    "type": "textfield",
                                                    "input": true,
                                                    "truncateMultipleSpaces": false
                                                }
                                            ],
                                            "lazyLoad": false
                                        },
                                        {
                                            "label": "CB",
                                            "key": "cb",
                                            "conditional": {
                                                "show": true,
                                                "when": "cook",
                                                "eq": "6DProcessClostridium"
                                            },
                                            "customConditional": "show = data.cook === '6D Process (Clostridium)'",
                                            "type": "well",
                                            "input": false,
                                            "tableView": false,
                                            "components": [
                                                {
                                                    "html": "<p><strong>6D Process (Clostridium)</strong></p>",
                                                    "label": "Content",
                                                    "refreshOnChange": false,
                                                    "key": "content9",
                                                    "type": "content",
                                                    "input": false,
                                                    "tableView": false
                                                },
                                                {
                                                    "label": "Internal Product Temperature",
                                                    "widget": "choicesjs",
                                                    "tableView": true,
                                                    "data": {
                                                        "values": [
                                                            {
                                                                "label": "85",
                                                                "value": "85"
                                                            },
                                                            {
                                                                "label": "86",
                                                                "value": "86"
                                                            },
                                                            {
                                                                "label": "87",
                                                                "value": "87"
                                                            },
                                                            {
                                                                "label": "88",
                                                                "value": "88"
                                                            },
                                                            {
                                                                "label": "89",
                                                                "value": "89"
                                                            },
                                                            {
                                                                "label": "90",
                                                                "value": "90"
                                                            },
                                                            {
                                                                "label": "91",
                                                                "value": "91"
                                                            },
                                                            {
                                                                "label": "92",
                                                                "value": "92"
                                                            },
                                                            {
                                                                "label": "93",
                                                                "value": "93"
                                                            },
                                                            {
                                                                "label": "94",
                                                                "value": "94"
                                                            },
                                                            {
                                                                "label": "95",
                                                                "value": "95"
                                                            },
                                                            {
                                                                "label": "96",
                                                                "value": "96"
                                                            },
                                                            {
                                                                "label": "97",
                                                                "value": "97"
                                                            },
                                                            {
                                                                "label": "98",
                                                                "value": "98"
                                                            },
                                                            {
                                                                "label": "99",
                                                                "value": "99"
                                                            },
                                                            {
                                                                "label": "100",
                                                                "value": "100"
                                                            }
                                                        ]
                                                    },
                                                    "key": "internalProductTemperature1",
                                                    "type": "select",
                                                    "input": true,
                                                    "searchDebounce": 0.3
                                                },
                                                {
                                                    "label": "internalProductTemperature1Time",
                                                    "calculateValue": "const opts = [\n  { label: 85, value: 51.8 },\n  { label: 86, value: 37 },\n  { label: 87, value: 27 },\n  { label: 88, value: 19.2 },\n  { label: 89, value: 13.9 },\n  { label: 90, value: 10 },\n  { label: 91, value: 7.9 },\n  { label: 92, value: 6.3 },\n  { label: 93, value: 5 },\n  { label: 94, value: 4 },\n  { label: 95, value: 3.2 },\n  { label: 96, value: 2.5 },\n  { label: 97, value: 2 },\n  { label: 98, value: 1.6 },\n  { label: 99, value: 1.3 },\n  { label: 100, value: 1 },\n];\n\nconst opt = opts.find(opt => opt.label === Number(data.internalProductTemperature1))\nvalue = opt.value ? opt.value : ''",
                                                    "key": "internalProductTemperature1Time",
                                                    "type": "hidden",
                                                    "input": true,
                                                    "tableView": false
                                                },
                                                {
                                                    "label": "Cook Time for 6D Process (mins)",
                                                    "disabled": true,
                                                    "tableView": true,
                                                    "calculateValue": "value = data.internalProductTemperature1Time",
                                                    "key": "cookTimeFor6DProcess1",
                                                    "type": "textfield",
                                                    "input": true,
                                                    "truncateMultipleSpaces": false
                                                }
                                            ],
                                            "lazyLoad": false
                                        }
                                    ],
                                    "lazyLoad": false
                                }
                            ],
                            "width": 3,
                            "offset": 0,
                            "push": 0,
                            "pull": 0,
                            "size": "md",
                            "currentWidth": 3
                        },
                        {
                            "components": [
                                {
                                    "label": "W44",
                                    "key": "w44",
                                    "customConditional": "show = (data.settings.enable3 && data.processSteps.Cook) || (data.settings.enable4 && data.processSteps.Chill)",
                                    "type": "well",
                                    "input": false,
                                    "tableView": false,
                                    "components": [
                                        {
                                            "label": "Cook Method",
                                            "optionsLabelPosition": "right",
                                            "inline": false,
                                            "tableView": false,
                                            "perMode": "def",
                                            "values": [
                                                {
                                                    "label": "From Mr. ACE",
                                                    "value": "fromMrAce",
                                                    "shortcut": ""
                                                }
                                            ],
                                            "key": "cookMethod1",
                                            "customConditional": "show = data.settings.enable3 && data.processSteps.Cook ",
                                            "logic": [
                                                {
                                                    "name": "get values",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = data.settings.cookMethods1Array.length"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get values",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "let values = data.settings.cookMethods1Array.map(item => {\n  if(!!item) {\n    return {\n      label: item,\n      value: item\n    }\n  } else {\n    return false\n  }\n})\n\nvalues = values.filter(value => value !== false)\nschema = { values }"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "radio",
                                            "input": true
                                        },
                                        {
                                            "label": "Chill Method",
                                            "optionsLabelPosition": "right",
                                            "inline": false,
                                            "tableView": false,
                                            "perMode": "def",
                                            "values": [
                                                {
                                                    "label": "From Mr. ACE",
                                                    "value": "fromMrAce",
                                                    "shortcut": ""
                                                }
                                            ],
                                            "key": "chillMethod",
                                            "customConditional": "show = data.settings.enable4 && data.processSteps.Chill",
                                            "logic": [
                                                {
                                                    "name": "get values",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = data.settings.chillMethods1Array.length"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get values",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "let values = data.settings.chillMethods1Array.map(item => {\n  if(!!item) {\n    return {\n      label: item,\n      value: item\n    }\n  } else {\n    return false\n  }\n})\n\nvalues = values.filter(value => value !== false)\nschema = { values }"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "radio",
                                            "input": true
                                        }
                                    ],
                                    "lazyLoad": false
                                }
                            ],
                            "size": "md",
                            "width": 3,
                            "offset": 0,
                            "push": 0,
                            "pull": 0,
                            "currentWidth": 3
                        },
                        {
                            "components": [
                                {
                                    "label": "w5",
                                    "key": "w5",
                                    "customConditional": "show = (data.settings.enable5 && data.processSteps['Re-therm'])",
                                    "type": "well",
                                    "input": false,
                                    "tableView": false,
                                    "components": [
                                        {
                                            "label": "Re-therm Method",
                                            "optionsLabelPosition": "right",
                                            "inline": false,
                                            "tableView": false,
                                            "perMode": "def",
                                            "values": [
                                                {
                                                    "label": "from Mr. ACE",
                                                    "value": "fromMrAce",
                                                    "shortcut": ""
                                                }
                                            ],
                                            "key": "reThermMethod",
                                            "logic": [
                                                {
                                                    "name": "get values",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = data.settings.reThermMethods1Array.length"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get values",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "let values = data.settings.reThermMethods1Array.map(item => {\n  if(!!item){\n    return {\n      label: item,\n      value: item\n    }\n  } else {\n    return false\n  }\n})\n\nvalues = values.filter(value => value !== false)\nschema = { values }"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "radio",
                                            "input": true
                                        }
                                    ],
                                    "lazyLoad": false
                                },
                                {
                                    "label": "w6",
                                    "key": "w6",
                                    "customConditional": "show = data.settings.enable52 && data.processSteps.Service",
                                    "type": "well",
                                    "input": false,
                                    "tableView": false,
                                    "components": [
                                        {
                                            "label": "Service Method",
                                            "optionsLabelPosition": "right",
                                            "inline": false,
                                            "tableView": false,
                                            "perMode": "def",
                                            "values": [
                                                {
                                                    "label": "From Mr. ACE",
                                                    "value": "fromMrAce",
                                                    "shortcut": ""
                                                }
                                            ],
                                            "key": "serviceMethod",
                                            "logic": [
                                                {
                                                    "name": "get values",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = data.settings.reThermMethods2Array.length"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get values",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "let values = data.settings.reThermMethods2Array.map(item => {\n  if(!!item) {\n    return {\n      label: item,\n      value: item\n    }\n  } else {\n    return false\n  }\n})\n\nvalues = values.filter(value => value !== false)\nschema = { values }"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "radio",
                                            "input": true
                                        }
                                    ],
                                    "lazyLoad": false
                                }
                            ],
                            "size": "md",
                            "width": 3,
                            "offset": 0,
                            "push": 0,
                            "pull": 0,
                            "currentWidth": 3
                        }
                    ],
                    "key": "columns7",
                    "type": "columns",
                    "input": false,
                    "tableView": false,
                    "lazyLoad": false
                }
            ],
            "lazyLoad": false
        },
        {
            "title": "Process Report",
            "collapsible": true,
            "key": "processReport",
            "customConditional": "show = data.processSteps.Cook || data.processSteps.Chill || data.processSteps['Re-therm'] || data.processSteps.Service",
            "type": "panel",
            "label": "Process Report",
            "input": false,
            "tableView": false,
            "components": [
                {
                    "label": "Columns",
                    "columns": [
                        {
                            "components": [
                                {
                                    "label": "W33",
                                    "key": "w33",
                                    "type": "well",
                                    "input": false,
                                    "tableView": false,
                                    "components": [
                                        {
                                            "html": "<p><strong>Status&nbsp;</strong></p>",
                                            "label": "Content",
                                            "refreshOnChange": false,
                                            "key": "content1",
                                            "type": "content",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tProduct\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                            "refreshOnChange": false,
                                            "key": "html",
                                            "logic": [
                                                {
                                                    "name": "get content",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = true"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get content",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "let product\n\nif(data.settings.productInput === 'freeText') {\n  product = data.product\n} else if(data.settings.productInput === 'productDatabase') {\n  product = data.selectProduct\n}\n\nconst template = `\n\t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden\">\n\t\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t\t \tProduct\n\t\t</div>\n\t    <div style=\"flex: 1;\">\n\t      ${product}\n\t    </div>\n\t</div>\n`\n\nschema = { content: template }"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tCook Status\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                            "refreshOnChange": false,
                                            "key": "html2",
                                            "logic": [
                                                {
                                                    "name": "get content",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = data.processSteps.Cook"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get content",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": " const productTemperature = data.productTemperature\n \n let status\n \n if(typeof productTemperature === 'number') {\n   if(data.cook === 'Full Cook' && typeof data.settings.criticalLimit === 'number') {\n     status = productTemperature > data.settings.criticalLimit ? 'Pass' : 'Fail'\n   } else if(data.cook === 'Seal | Sear | Partial Cook' && typeof data.settings.criticalLimit1 === 'number') {\n     status = productTemperature > data.settings.criticalLimit1 ? 'Pass' : 'Fail'\n   }\n } else {\n   status = ''\n }\n\nlet bg\n\nif(status === 'Pass') {\n\tbg = '#198754'\n} else if(status === 'Fail') {\n\tbg = '#f44336'\n} else {\n\tbg = '#5046E6'\n}\n \n const template = `\n \t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n \t\t<div style=\"flex: 1; text-align: center; background: ${bg}; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n \t\t \tCook Status\n \t\t</div>\n \t    <div style=\"flex: 1;\">\n \t      ${status || ''}\n \t    </div>\n \t</div>\n `\n \n schema = { content: template }",
                                                            "content": "<div class=\"well\">Content</div>"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tChill Status\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                            "refreshOnChange": false,
                                            "key": "html3",
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tRe-therm Status\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                            "refreshOnChange": false,
                                            "key": "html4",
                                            "logic": [
                                                {
                                                    "name": "get content",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = data.processSteps['Re-therm']"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get content",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "const isPassed = data.productTemperature >= data.settings.criticalLimit2\n\nlet status\n\nif(typeof data.settings.criticalLimit2 !== 'number' && typeof data.productTemperature !== 'number') {\n  status = ''\n} else if(isPassed) {\n  status = 'Pass'\n} else {\n  status = 'Fail'\n}\n\nlet bg\n\nif(status === 'Pass') {\n\tbg = '#198754'\n} else if(status === 'Fail') {\n\tbg = '#f44336'\n} else {\n\tbg = '#5046E6'\n}\n \n const template = `\n \t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n \t\t<div style=\"flex: 1; text-align: center; background: ${bg}; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n \t\t \tRe-therm Status\n \t\t</div>\n \t    <div style=\"flex: 1;\">\n \t      ${status}\n \t    </div>\n \t</div>\n `\n \n schema = { content: template }",
                                                            "content": "<div class=\"well\">Content</div>"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tService Status\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                            "refreshOnChange": false,
                                            "key": "html6",
                                            "logic": [
                                                {
                                                    "name": "get content",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = data.processSteps.Service"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get content",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "const isPassed = data.productTemperature >= data.settings.criticalLimit2113\n\nlet status\n\nif(typeof data.settings.criticalLimit2113 !== 'number' && data.productTemperatureGrid.length === 0) {\n  status = ''\n} else if(isPassed) {\n  status = 'Pass'\n} else {\n  status = 'Fail'\n}\n\nlet bg\n\nif(status === 'Pass') {\n\tbg = '#198754'\n} else if(status === 'Fail') {\n\tbg = '#f44336'\n} else {\n\tbg = '#5046E6'\n}\n \n const template = `\n \t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n \t\t<div style=\"flex: 1; text-align: center; background: ${bg}; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n \t\t \tService Status\n \t\t</div>\n \t    <div style=\"flex: 1;\">\n \t      ${status}\n \t    </div>\n \t</div>\n `\n \n schema = { content: template }",
                                                            "content": "<div class=\"well\">Content</div>"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        }
                                    ],
                                    "lazyLoad": false
                                }
                            ],
                            "width": 4,
                            "offset": 0,
                            "push": 0,
                            "pull": 0,
                            "size": "md",
                            "currentWidth": 4
                        },
                        {
                            "components": [
                                {
                                    "label": "W6",
                                    "key": "w7",
                                    "customConditional": "show = data.processSteps.Cook ",
                                    "type": "well",
                                    "input": false,
                                    "tableView": false,
                                    "components": [
                                        {
                                            "html": "<p><strong>Cook Step</strong></p>",
                                            "label": "Content",
                                            "refreshOnChange": false,
                                            "key": "content2",
                                            "type": "content",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tCook Type\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                            "refreshOnChange": false,
                                            "key": "html13",
                                            "logic": [
                                                {
                                                    "name": "get content",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = true"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get content",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "const template = `\n\t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t\t \tCook Type\n\t\t</div>\n\t    <div style=\"flex: 1;\">\n\t      ${data.processSteps.Cook ? data.cook : ''}\n\t    </div>\n\t</div>\n`\n\nschema = { content: template }"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tCook Time\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                            "refreshOnChange": false,
                                            "key": "html14",
                                            "customConditional": "show = data.cook === 'Sous Vide' || data.cook === '6D Process (Listeria)' || data.cook === '6D Process (Clostridium)' ",
                                            "logic": [
                                                {
                                                    "name": "get content",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = true"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get content",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "let time\n\nif(data.cook === 'Sous Vide'){\n  time = data.timeRequired\n} else if(data.cook === '6D Process (Listeria)') {\n  time = data.cookTimeFor6DProcess\n} else if(data.cook === '6D Process (Clostridium)') {\n  time = data.cookTimeFor6DProcess1\n}\n\nconst template = `\n\t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1rem\">\n\t\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t\t \tCook Time\n\t\t</div>\n\t    <div style=\"flex: 1;\">\n\t      ${time || ''}\n\t    </div>\n\t</div>\n`\n\nschema = { content: template }",
                                                            "content": "<div class=\"well\">Content</div>"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tCook Temp.\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                            "refreshOnChange": false,
                                            "key": "html15",
                                            "logic": [
                                                {
                                                    "name": "get content",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = true"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get content",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "let temp\n\nif(data.cook === 'Full Cook') {\n  temp = data.settings.criticalLimit\n} else if(data.cook === 'Seal | Sear | Partial Cook') {\n  temp = data.settings.criticalLimit1\n} else if(data.cook === 'Sous Vide') {\n  temp = data.cookTemperature\n} else if(data.cook === '6D Process (Listeria)') {\n  temp = data.internalProductTemperature\n} else if(data.cook === '6D Process (Clostridium)') {\n  temp = data.internalProductTemperature1\n}\n\nconst template = `\n\t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1rem\">\n\t\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t\t \tCook Temp.\n\t\t</div>\n\t    <div style=\"flex: 1;\">\n\t      ${temp || ''}\n\t    </div>\n\t</div>\n`\n\nschema = { content: template }",
                                                            "content": "<div class=\"well\">Content</div>"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        }
                                    ],
                                    "lazyLoad": false
                                },
                                {
                                    "label": "vv",
                                    "key": "vv",
                                    "customConditional": "show = data.processSteps['Re-therm']",
                                    "type": "well",
                                    "input": false,
                                    "tableView": false,
                                    "components": [
                                        {
                                            "html": "<p><strong>Re-therm Step</strong></p>",
                                            "label": "Content",
                                            "refreshOnChange": false,
                                            "key": "content5",
                                            "type": "content",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tTemperature\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                            "refreshOnChange": false,
                                            "key": "html11",
                                            "logic": [
                                                {
                                                    "name": "get content",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = true"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get content",
                                                            "type": "mergeComponentSchema",
                                                            "content": "<div class=\"well\">Content</div>",
                                                            "schemaDefinition": "const template = `\n\t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t\t \tTemperature\n\t\t</div>\n\t    <div style=\"flex: 1;\">\n\t      ${data.settings.criticalLimit2}\n\t    </div>\n\t</div>\n`\n\nschema = { content: template }"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        }
                                    ],
                                    "lazyLoad": false
                                },
                                {
                                    "label": "yy",
                                    "key": "yy",
                                    "customConditional": "show = data.processSteps.Service",
                                    "type": "well",
                                    "input": false,
                                    "tableView": false,
                                    "components": [
                                        {
                                            "html": "<p><strong>Service Step</strong></p>",
                                            "label": "Content",
                                            "refreshOnChange": false,
                                            "key": "content6",
                                            "type": "content",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tTemperature\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                            "refreshOnChange": false,
                                            "key": "html12",
                                            "logic": [
                                                {
                                                    "name": "get content",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = true"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get content",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "const template = `\n\t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t\t \tTemperature\n\t\t</div>\n\t    <div style=\"flex: 1;\">\n\t      ${data.settings.criticalLimit2113}\n\t    </div>\n\t</div>\n`\n\nschema = { content: template }"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        }
                                    ],
                                    "lazyLoad": false
                                }
                            ],
                            "width": 4,
                            "offset": 0,
                            "push": 0,
                            "pull": 0,
                            "size": "md",
                            "currentWidth": 4
                        },
                        {
                            "components": [
                                {
                                    "label": "W7",
                                    "key": "w8",
                                    "customConditional": "show = data.processSteps.Chill",
                                    "type": "well",
                                    "input": false,
                                    "tableView": false,
                                    "components": [
                                        {
                                            "html": "<p><strong>Chill Step</strong></p>",
                                            "label": "Content",
                                            "refreshOnChange": false,
                                            "key": "content3",
                                            "type": "content",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "W77",
                                            "key": "w77",
                                            "customConditional": "show = data.settings.chillSteps1 === 'onePhaseChill' || data.settings.chillSteps1 === 'twoPhaseChill'",
                                            "type": "well",
                                            "input": false,
                                            "tableView": false,
                                            "components": [
                                                {
                                                    "label": "HTML",
                                                    "tag": "div",
                                                    "attrs": [
                                                        {
                                                            "attr": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tChill Time Phase 1\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                                    "refreshOnChange": false,
                                                    "key": "html20",
                                                    "logic": [
                                                        {
                                                            "name": "get content",
                                                            "trigger": {
                                                                "type": "javascript",
                                                                "javascript": "result = true"
                                                            },
                                                            "actions": [
                                                                {
                                                                    "name": "get content",
                                                                    "type": "mergeComponentSchema",
                                                                    "content": "<div class=\"well\">Content</div>",
                                                                    "schemaDefinition": "const template = `\n\t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t\t \tChill Time Phase 1\n\t\t</div>\n\t    <div style=\"flex: 1;\">\n\t      ${data.settings.timePermitted || ''}\n\t    </div>\n\t</div>\n`\n\nschema = { content: template }"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "type": "htmlelement",
                                                    "input": false,
                                                    "tableView": false
                                                },
                                                {
                                                    "label": "HTML",
                                                    "tag": "div",
                                                    "attrs": [
                                                        {
                                                            "attr": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tPhase 1 Status\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                                    "refreshOnChange": false,
                                                    "key": "html16",
                                                    "type": "htmlelement",
                                                    "input": false,
                                                    "tableView": false
                                                }
                                            ],
                                            "lazyLoad": false
                                        },
                                        {
                                            "label": "m",
                                            "key": "m",
                                            "customConditional": "show = data.settings.chillSteps1 === 'twoPhaseChill'",
                                            "type": "well",
                                            "input": false,
                                            "tableView": false,
                                            "components": [
                                                {
                                                    "label": "HTML",
                                                    "tag": "div",
                                                    "attrs": [
                                                        {
                                                            "attr": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tChill Time Phase 2\n\t</div>\n    <div style=\"flex: 1;\">\n     \n    </div>\n</div>",
                                                    "refreshOnChange": false,
                                                    "key": "html21",
                                                    "logic": [
                                                        {
                                                            "name": "get content",
                                                            "trigger": {
                                                                "type": "javascript",
                                                                "javascript": "result = true"
                                                            },
                                                            "actions": [
                                                                {
                                                                    "name": "get content",
                                                                    "type": "mergeComponentSchema",
                                                                    "schemaDefinition": "const template = `\n\t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t\t \tChill Time Phase 1\n\t\t</div>\n\t    <div style=\"flex: 1;\">\n\t      ${data.settings.timePermitted1 || ''}\n\t    </div>\n\t</div>\n`\n\nschema = { content: template }"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "type": "htmlelement",
                                                    "input": false,
                                                    "tableView": false
                                                },
                                                {
                                                    "label": "HTML",
                                                    "tag": "div",
                                                    "attrs": [
                                                        {
                                                            "attr": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tPhase 2 Status\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                                    "refreshOnChange": false,
                                                    "key": "html18",
                                                    "type": "htmlelement",
                                                    "input": false,
                                                    "tableView": false
                                                }
                                            ],
                                            "lazyLoad": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tTotal Time Chilled\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                            "refreshOnChange": false,
                                            "key": "html22",
                                            "logic": [
                                                {
                                                    "name": "get content",
                                                    "trigger": {
                                                        "type": "javascript",
                                                        "javascript": "result = true"
                                                    },
                                                    "actions": [
                                                        {
                                                            "name": "get content",
                                                            "type": "mergeComponentSchema",
                                                            "schemaDefinition": "let time\n\nif(typeof data.settings.timePermitted === 'number' && typeof data.settings.timePermitted1 === 'number') {\n  time = data.settings.timePermitted + data.settings.timePermitted1\n} else if(typeof data.settings.timePermitted === 'number') {\n  time = data.settings.timePermitted\n} else {\n  time = ''\n}\n\nconst template = `\n\t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1rem\">\n\t\t<div style=\"background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem; flex: 1; text-align: center;\">\n\t\t \tTotal Time Chilled\n\t\t</div>\n\t    <div style=\"flex: 1;\">\n\t      ${time || ''}\n\t    </div>\n\t</div>\n`\n\nschema = { content: template }",
                                                            "content": "<div class=\"well\">Content</div>"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        }
                                    ],
                                    "lazyLoad": false
                                }
                            ],
                            "size": "md",
                            "width": 4,
                            "offset": 0,
                            "push": 0,
                            "pull": 0,
                            "currentWidth": 4
                        }
                    ],
                    "key": "columns",
                    "type": "columns",
                    "input": false,
                    "tableView": false,
                    "lazyLoad": false
                }
            ],
            "collapsed": true,
            "lazyLoad": false
        },
        {
            "label": "Columns",
            "columns": [
                {
                    "components": [
                        {
                            "title": "Cook Step Status",
                            "collapsible": true,
                            "key": "cookStepStatus",
                            "customConditional": "show = data.processSteps.Cook ",
                            "type": "panel",
                            "label": "Cook Step Status",
                            "input": false,
                            "tableView": false,
                            "components": [
                                {
                                    "label": "HTML",
                                    "attrs": [
                                        {
                                            "attr": "",
                                            "value": ""
                                        }
                                    ],
                                    "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tTarget Temp. Achieved\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                    "refreshOnChange": false,
                                    "key": "html8",
                                    "logic": [
                                        {
                                            "name": "get content",
                                            "trigger": {
                                                "type": "javascript",
                                                "javascript": "result = data.processSteps.Cook"
                                            },
                                            "actions": [
                                                {
                                                    "name": "get content",
                                                    "type": "mergeComponentSchema",
                                                    "schemaDefinition": "const temp = data.productTemperature\n\nconst template = `\n\t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t\t \tTarget Temp. Achieved\n\t\t</div>\n\t    <div style=\"flex: 1;\">\n\t      ${temp || ''}\n\t    </div>\n\t</div>\n`\n\nschema = { content: template }",
                                                    "content": "<div class=\"well\">Content</div>"
                                                }
                                            ]
                                        }
                                    ],
                                    "type": "htmlelement",
                                    "input": false,
                                    "tableView": false
                                },
                                {
                                    "label": "Time1",
                                    "optionsLabelPosition": "right",
                                    "inline": true,
                                    "hideLabel": true,
                                    "tableView": false,
                                    "defaultValue": {
                                        "timePassed": true,
                                        "timeRemaining": false
                                    },
                                    "values": [
                                        {
                                            "label": "Time Passed",
                                            "value": "timePassed",
                                            "shortcut": ""
                                        },
                                        {
                                            "label": "Time Remaining",
                                            "value": "timeRemaining",
                                            "shortcut": ""
                                        }
                                    ],
                                    "key": "time1",
                                    "customConditional": "show = data.cook === 'Sous Vide' || data.cook === '6D Process (Listeria)' || data.cook === '6D Process (Clostridium)'",
                                    "type": "selectboxes",
                                    "input": true,
                                    "inputType": "checkbox"
                                },
                                {
                                    "label": "HTML",
                                    "tag": "div",
                                    "attrs": [
                                        {
                                            "attr": "",
                                            "value": ""
                                        }
                                    ],
                                    "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tChill Time Passed\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                    "refreshOnChange": false,
                                    "key": "html27",
                                    "customConditional": "show = (show = data.cook === 'Sous Vide' || data.cook === '6D Process (Listeria)' || data.cook === '6D Process (Clostridium)') && data.time1.timePassed",
                                    "type": "htmlelement",
                                    "input": false,
                                    "tableView": false
                                },
                                {
                                    "label": "HTML",
                                    "tag": "div",
                                    "attrs": [
                                        {
                                            "attr": "",
                                            "value": ""
                                        }
                                    ],
                                    "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tChill Time Remaining\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                    "refreshOnChange": false,
                                    "key": "html28",
                                    "customConditional": "show = (show = data.cook === 'Sous Vide' || data.cook === '6D Process (Listeria)' || data.cook === '6D Process (Clostridium)') && data.time1.timeRemaining",
                                    "type": "htmlelement",
                                    "input": false,
                                    "tableView": false
                                },
                                {
                                    "label": "HTML",
                                    "tag": "div",
                                    "attrs": [
                                        {
                                            "attr": "",
                                            "value": ""
                                        }
                                    ],
                                    "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tStatus\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                    "refreshOnChange": false,
                                    "key": "html1",
                                    "logic": [
                                        {
                                            "name": "get content",
                                            "trigger": {
                                                "type": "javascript",
                                                "javascript": "result = data.processSteps.Cook"
                                            },
                                            "actions": [
                                                {
                                                    "name": "get content",
                                                    "type": "mergeComponentSchema",
                                                    "schemaDefinition": "const productTemperature = data.productTemperature\n \n let status\n \n if(typeof productTemperature === 'number') {\n   if(data.cook === 'Full Cook' && typeof data.settings.criticalLimit === 'number') {\n     status = productTemperature > data.settings.criticalLimit ? 'Pass' : 'Fail'\n   } else if(data.cook === 'Seal | Sear | Partial Cook' && typeof data.settings.criticalLimit1 === 'number') {\n     status = productTemperature > data.settings.criticalLimit1 ? 'Pass' : 'Fail'\n   }\n } else {\n   status = ''\n }\n\nlet bg\n\nif(status === 'Pass') {\n\tbg = '#198754'\n} else if(status === 'Fail') {\n\tbg = '#f44336'\n} else {\n\tbg = '#5046E6'\n}\n \n const template = `\n \t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n \t\t<div style=\"flex: 1; text-align: center; background: ${bg}; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n \t\t \tStatus\n \t\t</div>\n \t    <div style=\"flex: 1;\">\n \t      ${status || ''}\n \t    </div>\n \t</div>\n `\n \n schema = { content: template }",
                                                    "content": "<div class=\"well\">Content</div>"
                                                }
                                            ]
                                        }
                                    ],
                                    "type": "htmlelement",
                                    "input": false,
                                    "tableView": false
                                }
                            ],
                            "collapsed": true,
                            "lazyLoad": false
                        }
                    ],
                    "width": 4,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "size": "md",
                    "currentWidth": 4
                },
                {
                    "components": [
                        {
                            "title": "Chill Step Status",
                            "collapsible": true,
                            "key": "chillStepStatus",
                            "customConditional": "show = data.processSteps.Chill",
                            "type": "panel",
                            "label": "Chill Step Status",
                            "input": false,
                            "tableView": false,
                            "components": [
                                {
                                    "title": "Phase 1",
                                    "collapsible": true,
                                    "key": "phase1",
                                    "customConditional": "show = data.settings.chillSteps1 === 'onePhaseChill' || data.settings.chillSteps1 === 'twoPhaseChill'",
                                    "type": "panel",
                                    "label": "Phase 1",
                                    "input": false,
                                    "tableView": false,
                                    "components": [
                                        {
                                            "label": "Time1",
                                            "optionsLabelPosition": "right",
                                            "inline": true,
                                            "hideLabel": true,
                                            "tableView": false,
                                            "values": [
                                                {
                                                    "label": "Time Passed",
                                                    "value": "timePassed",
                                                    "shortcut": ""
                                                },
                                                {
                                                    "label": "Time Remaining",
                                                    "value": "timeRemaining",
                                                    "shortcut": ""
                                                }
                                            ],
                                            "key": "time3",
                                            "type": "selectboxes",
                                            "input": true,
                                            "inputType": "checkbox",
                                            "defaultValue": {
                                                "timePassed": true,
                                                "timeRemaining": false
                                            }
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tChill Time Passed\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                            "refreshOnChange": false,
                                            "key": "html23",
                                            "customConditional": "show = data.time3.timePassed",
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tChill Time Remaining\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                            "refreshOnChange": false,
                                            "key": "html25",
                                            "customConditional": "show = data.time3.timeRemaining",
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tPhase 1 Status\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                            "refreshOnChange": false,
                                            "key": "html17",
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        }
                                    ],
                                    "collapsed": true,
                                    "lazyLoad": false
                                },
                                {
                                    "title": "Phase 2",
                                    "collapsible": true,
                                    "key": "phase2",
                                    "customConditional": "show = data.settings.chillSteps1 === 'twoPhaseChill'",
                                    "type": "panel",
                                    "label": "Phase 2",
                                    "input": false,
                                    "tableView": false,
                                    "components": [
                                        {
                                            "label": "Time1",
                                            "optionsLabelPosition": "right",
                                            "inline": true,
                                            "hideLabel": true,
                                            "tableView": false,
                                            "defaultValue": {
                                                "timePassed": true,
                                                "timeRemaining": false
                                            },
                                            "values": [
                                                {
                                                    "label": "Time Passed",
                                                    "value": "timePassed",
                                                    "shortcut": ""
                                                },
                                                {
                                                    "label": "Time Remaining",
                                                    "value": "timeRemaining",
                                                    "shortcut": ""
                                                }
                                            ],
                                            "key": "time4",
                                            "type": "selectboxes",
                                            "input": true,
                                            "inputType": "checkbox"
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tChill Time Passed\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                            "refreshOnChange": false,
                                            "key": "html24",
                                            "customConditional": "show = data.time4.timePassed",
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tChill Time Remaining\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                            "refreshOnChange": false,
                                            "key": "html26",
                                            "customConditional": "show = data.time4.timeRemaining",
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        },
                                        {
                                            "label": "HTML",
                                            "tag": "div",
                                            "attrs": [
                                                {
                                                    "attr": "",
                                                    "value": ""
                                                }
                                            ],
                                            "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tPhase 2 Status\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>\n",
                                            "refreshOnChange": false,
                                            "key": "html19",
                                            "type": "htmlelement",
                                            "input": false,
                                            "tableView": false
                                        }
                                    ],
                                    "collapsed": true,
                                    "lazyLoad": false
                                }
                            ],
                            "collapsed": true,
                            "lazyLoad": false
                        }
                    ],
                    "width": 4,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "size": "md",
                    "currentWidth": 4
                },
                {
                    "components": [
                        {
                            "title": "Re-therm Status",
                            "collapsible": true,
                            "key": "reTherm",
                            "customConditional": "show = data.processSteps['Re-therm']",
                            "type": "panel",
                            "label": "Re-therm Status",
                            "collapsed": true,
                            "input": false,
                            "tableView": false,
                            "components": [
                                {
                                    "label": "HTML",
                                    "tag": "div",
                                    "attrs": [
                                        {
                                            "attr": "",
                                            "value": ""
                                        }
                                    ],
                                    "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tTemperature\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                    "refreshOnChange": false,
                                    "key": "html9",
                                    "logic": [
                                        {
                                            "name": "get content",
                                            "trigger": {
                                                "type": "javascript",
                                                "javascript": "result = true"
                                            },
                                            "actions": [
                                                {
                                                    "name": "get content",
                                                    "type": "mergeComponentSchema",
                                                    "schemaDefinition": "const template = `\n\t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t\t \tTemperature\n\t\t</div>\n\t    <div style=\"flex: 1;\">\n\t      ${data.settings.criticalLimit2}\n\t    </div>\n\t</div>\n`\n\nschema = { content: template }"
                                                }
                                            ]
                                        }
                                    ],
                                    "type": "htmlelement",
                                    "input": false,
                                    "tableView": false
                                },
                                {
                                    "label": "HTML",
                                    "tag": "div",
                                    "attrs": [
                                        {
                                            "attr": "",
                                            "value": ""
                                        }
                                    ],
                                    "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tRe-therm Status\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                    "refreshOnChange": false,
                                    "key": "html5",
                                    "logic": [
                                        {
                                            "name": "get content",
                                            "trigger": {
                                                "type": "javascript",
                                                "javascript": "result = data.processSteps['Re-therm']"
                                            },
                                            "actions": [
                                                {
                                                    "name": "get content",
                                                    "type": "mergeComponentSchema",
                                                    "schemaDefinition": "const isPassed = data.productTemperature >= data.settings.criticalLimit2\n\nlet status\n\nif(typeof data.settings.criticalLimit2 !== 'number' && typeof data.productTemperature !== 'number') {\n  status = ''\n} else if(isPassed) {\n  status = 'Pass'\n} else {\n  status = 'Fail'\n}\n\nlet bg\n\nif(status === 'Pass') {\n\tbg = '#198754'\n} else if(status === 'Fail') {\n\tbg = '#f44336'\n} else {\n\tbg = '#5046E6'\n}\n \n const template = `\n \t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n \t\t<div style=\"flex: 1; text-align: center; background: ${bg}; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n \t\t \tRe-therm Status\n \t\t</div>\n \t    <div style=\"flex: 1;\">\n \t      ${status}\n \t    </div>\n \t</div>\n `\n \n schema = { content: template }",
                                                    "content": "<div class=\"well\">Content</div>"
                                                }
                                            ]
                                        }
                                    ],
                                    "type": "htmlelement",
                                    "input": false,
                                    "tableView": false
                                }
                            ],
                            "lazyLoad": false
                        },
                        {
                            "title": "Service Status",
                            "collapsible": true,
                            "key": "serviceStatus1",
                            "customConditional": "show = data.processSteps.Service",
                            "type": "panel",
                            "label": "Service Status",
                            "input": false,
                            "tableView": false,
                            "components": [
                                {
                                    "label": "HTML",
                                    "tag": "div",
                                    "attrs": [
                                        {
                                            "attr": "",
                                            "value": ""
                                        }
                                    ],
                                    "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tTemperature\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                    "refreshOnChange": false,
                                    "key": "html10",
                                    "logic": [
                                        {
                                            "name": "get content",
                                            "trigger": {
                                                "type": "javascript",
                                                "javascript": "result = true"
                                            },
                                            "actions": [
                                                {
                                                    "name": "get content",
                                                    "type": "mergeComponentSchema",
                                                    "schemaDefinition": "const template = `\n\t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden;\">\n\t\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t\t \tTemperature\n\t\t</div>\n\t    <div style=\"flex: 1;\">\n\t      ${data.settings.criticalLimit2113}\n\t    </div>\n\t</div>\n`\n\nschema = { content: template }"
                                                }
                                            ]
                                        }
                                    ],
                                    "type": "htmlelement",
                                    "input": false,
                                    "tableView": false
                                },
                                {
                                    "label": "HTML",
                                    "tag": "div",
                                    "attrs": [
                                        {
                                            "attr": "",
                                            "value": ""
                                        }
                                    ],
                                    "content": "<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n\t<div style=\"flex: 1; text-align: center; background: #5046E6; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n\t \tService Status\n\t</div>\n    <div style=\"flex: 1;\">\n      \n    </div>\n</div>",
                                    "refreshOnChange": false,
                                    "key": "html7",
                                    "logic": [
                                        {
                                            "name": "get content",
                                            "trigger": {
                                                "type": "javascript",
                                                "javascript": "result = data.processSteps.Service"
                                            },
                                            "actions": [
                                                {
                                                    "name": "get content",
                                                    "type": "mergeComponentSchema",
                                                    "schemaDefinition": "const isPassed = data.productTemperature >= data.settings.criticalLimit2113\n\nlet status\n\nif(typeof data.settings.criticalLimit2113 !== 'number' && data.productTemperatureGrid.length === 0) {\n  status = ''\n} else if(isPassed) {\n  status = 'Pass'\n} else {\n  status = 'Fail'\n}\n\nlet bg\n\nif(status === 'Pass') {\n\tbg = '#198754'\n} else if(status === 'Fail') {\n\tbg = '#f44336'\n} else {\n\tbg = '#5046E6'\n}\n \n const template = `\n \t<div style=\"display: flex; gap: .875rem; align-items: center; background: #353C70; color: white; border-radius: .25rem; overflow: hidden; margin-top: 1.25rem\">\n \t\t<div style=\"flex: 1; text-align: center; background: ${bg}; border-radius: .25rem; color: white; padding: .625rem 1rem;\">\n \t\t \tService Status\n \t\t</div>\n \t    <div style=\"flex: 1;\">\n \t      ${status}\n \t    </div>\n \t</div>\n `\n \n schema = { content: template }",
                                                    "content": "<div class=\"well\">Content</div>"
                                                }
                                            ]
                                        }
                                    ],
                                    "type": "htmlelement",
                                    "input": false,
                                    "tableView": false
                                }
                            ],
                            "collapsed": true,
                            "lazyLoad": false
                        }
                    ],
                    "size": "md",
                    "width": 4,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "currentWidth": 4
                }
            ],
            "key": "columns2",
            "type": "columns",
            "input": false,
            "tableView": false,
            "lazyLoad": false
        },
        {
            "label": "Product Temperature",
            "mask": false,
            "tableView": false,
            "delimiter": false,
            "requireDecimal": false,
            "inputFormat": "plain",
            "key": "productTemperature",
            "type": "number",
            "input": true
        },
        {
            "label": "Status",
            "optionsLabelPosition": "right",
            "inline": false,
            "tableView": false,
            "perMode": "def",
            "values": [
                {
                    "label": "In Progress",
                    "value": "inProgress",
                    "shortcut": ""
                },
                {
                    "label": "Complete",
                    "value": "complete",
                    "shortcut": ""
                }
            ],
            "key": "status",
            "type": "radio",
            "input": true
        },
        {
            "type": "button",
            "label": "Submit",
            "key": "submit",
            "disableOnInvalid": true,
            "input": true,
            "tableView": false
        }
    ]
}
